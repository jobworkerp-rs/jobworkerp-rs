syntax = "proto3";

package jobworkerp.data;

import "jobworkerp/data/common.proto";

message RunnerData {
  // runner name (unique key, proto message prefix: e.g. name: "command",
  // runner_settings_proto: "CommandRunnerSettings", job_args_proto: "CommandArg")
  string name = 1;
  // runner type
  jobworkerp.data.RunnerType runner_type = 2;
  // runner_settings definition as proto file
  string runner_settings_proto = 3;
  // job arg message definition as proto file. must use this.name as message
  // type prefix (e.g. "message CommandArg{ repeated string args = 1; }")
  string job_args_proto = 4;
  // result output message definition as proto file. must use this.name as
  // message type prefix (e.g. "message CommandResult{ string result = 1; }") if
  // empty, use utf8 string as bytes array for result output(or not resolved)
  optional string result_output_proto = 5;
}

message RunnerId { int64 value = 1; }

message Runner {
  RunnerId id = 1;
  RunnerData data = 2;
}
