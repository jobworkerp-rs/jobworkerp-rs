syntax = "proto3";

package jobworkerp.service;

import "jobworkerp/service/common.proto";
import "jobworkerp/data/runner_schema.proto";


message CreateRunnerSchemaResponse {
    jobworkerp.data.RunnerSchemaId id = 1; // generated id
}

message OptionalRunnerSchemaResponse {
    optional jobworkerp.data.RunnerSchema data = 1;
}

service RunnerSchemaService {
  rpc Create(jobworkerp.data.RunnerSchemaData) returns (CreateRunnerSchemaResponse);
  rpc Update(jobworkerp.data.RunnerSchema) returns (SuccessResponse);
  rpc Delete(jobworkerp.data.RunnerSchemaId) returns (SuccessResponse);
  rpc Find(jobworkerp.data.RunnerSchemaId) returns (OptionalRunnerSchemaResponse);
  rpc FindList(FindListRequest) returns (stream jobworkerp.data.RunnerSchema);
  rpc Count(CountCondition) returns (CountResponse);
}