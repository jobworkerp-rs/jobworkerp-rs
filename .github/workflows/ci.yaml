name: CI
on:
  pull_request:
    branches:
      - main
#  push:
#    branches:
#    - main
permissions:
  contents: read

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: apt upgrade
        run: |
          apt-get update
          apt-get -y dist-upgrade && apt-get install -y sudo lv zsh git curl build-essential mold clang libclang-dev  gobjc gnustep gnustep-devel g++ musl-tools cmake pkg-config libssl-dev protobuf-compiler unzip
          # Install Node.js for setup-protoc action
          curl -fsSL https://deb.nodesource.com/setup_18.x | bash -
          apt-get install -y nodejs
      # - name: Install last version of Protoc
      #   uses: arduino/setup-protoc@v2
      #   with:
      #     version: "24.x"
      # #        repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Checkout Crate
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Set Toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: rustfmt, clippy
      - name: Run check
        run: cargo check
      - name: Run rustfmt
        run: cargo fmt --all -- --check
      - name: Run clippy
        run: cargo clippy -- -D warnings

  job-test:
    runs-on: ubuntu-latest
    container:
      image: nvcr.io/nvidia/cuda:12.8.1-cudnn-devel-ubuntu24.04
    timeout-minutes: 30
    services:
      db:
        image: mariadb:10.9
        ports:
          - 3306:3306
        env:
          MYSQL_HOST: db
          MYSQL_USER: maria
          MYSQL_PASSWORD: maria
          MYSQL_DATABASE: test
          MYSQL_ROOT_PASSWORD: ""
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_ROOT_HOST: "0.0.0.0"
        options: --health-cmd "mysqladmin ping" --health-interval 10s --health-timeout 5s --health-retries 10
      redis:
        image: redis:7
        env:
          REDIS_HOST: redis
        ports:
          - 6379:6379
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis-cluster:
        image: grokzen/redis-cluster:7.0.10
        env:
          REDIS_CLUSTER_IP: 127.0.0.1
          IP: 127.0.0.1
          INITIAL_PORT: 7000
          BIND_ADDRESS: 0.0.0.0
        ports:
          - 7000:7000
          - 7001:7001
          - 7002:7002
          - 7003:7003
          - 7004:7004
          - 7005:7005

    steps:
      - name: apt upgrade
        run: |
          apt-get update
          apt-get -y dist-upgrade && apt-get install -y sudo lv zsh git curl build-essential mold clang libclang-dev  gobjc gnustep gnustep-devel g++ musl-tools cmake pkg-config libssl-dev protobuf-compiler unzip # cudnn9-cuda-12-8          # Install Node.js for setup-protoc action
          curl -fsSL https://deb.nodesource.com/setup_18.x | bash -
          apt-get install -y nodejs
      - name: Clean up apt cache
        run: |
          apt-get clean
          rm -rf /var/lib/apt/lists/*
      # - name: Install last version of Protoc
      #   uses: arduino/setup-protoc@v2
      #   with:
      #     version: "24.x"
      #        repo-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install uv (for test only)
        uses: astral-sh/setup-uv@v5
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Cache Rust artifacts
        uses: Swatinem/rust-cache@v2
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --features "mysql,cuda,flash-attn" --release #cudnn,
      - name: Run test
        run: |
          cargo build --release
          cargo test --release -- --test-threads=1
        env:
          PLUGINS_RUNNER_DIR: "./target/release/"
          TEST_REDIS_URL: "redis://redis:6379"
          TEST_MYSQL_URL: "mysql://maria:maria@db:3306/test"
          UV_VENV_CLEAR: 1
      - name: Run test with mysql
        run: |
          rm -f app/test_db.sqlite3*
          rm -f app-wrapper/test_db.sqlite3*
          rm -f infra/test_db.sqlite3*
          rm -f worker-app/test_db.sqlite3*
          cargo build --features "mysql,cuda,flash-attn" --release #,cudnn
          cargo test --features "mysql,cuda,flash-attn" --release -- --test-threads=1 #,cudnn
          cargo clean
        env:
          PLUGINS_RUNNER_DIR: "./target/release/"
          TEST_REDIS_URL: "redis://redis:6379"
          TEST_MYSQL_URL: "mysql://maria:maria@db:3306/test"
          UV_VENV_CLEAR: 1
