name: Create and publish GPU-enabled Docker images (Manual)

on:
  workflow_dispatch: # 手動実行のみ
    inputs:
      features:
        description: 'GPU features to include'
        required: true
        default: 'mysql,cuda,flash-attn'
        type: string
      tag_suffix:
        description: 'Tag suffix for Docker images'
        required: true
        default: 'cuda'
        type: string

# Defines two custom environment variables for the workflow. These are used for the Container registry domain, and a name for the Docker image that this workflow builds.
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

# There is a single job in this workflow. It's configured to run on the latest available version of Ubuntu.
jobs:
  build-and-push-gpu-image:
    runs-on: ubuntu-latest
    container:
      image: nvcr.io/nvidia/cuda:12.8.1-devel-ubuntu24.04
      options: --privileged -v /var/run/docker.sock:/var/run/docker.sock
    # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
    permissions:
      contents: read
      packages: write
    steps:
      - name: apt upgrade
        run: |
          apt-get update
          apt-get -y dist-upgrade && apt-get install -y sudo lv zsh git curl build-essential mold clang g++ musl-tools cmake pkg-config libssl-dev protobuf-compiler unzip ca-certificates curl gnupg lsb-release docker.io
          # Install Node.js for setup-protoc action
          curl -fsSL https://deb.nodesource.com/setup_18.x | bash -
          apt-get install -y nodejs
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install last version of Protoc
        uses: arduino/setup-protoc@v2
        with:
          version: "24.x"
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-gpu-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Display GPU features
        run: |
          echo "Building with features: ${{ github.event.inputs.features }}"
          echo "Tag suffix: ${{ github.event.inputs.tag_suffix }}"
          # CUDA環境の確認
          nvidia-smi || echo "nvidia-smi not available (expected in CI)"
          nvcc --version || echo "nvcc not available"
      # build with GPU features
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --features "${{ github.event.inputs.features }}"
      # Uses the `docker/login-action` action to log in to the Container registry registry using the account and password that will publish the packages. Once published, the packages are scoped to the account defined here.
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push front GPU Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          file: grpc-front/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/grpc-front-${{ github.event.inputs.tag_suffix }}:latest
            ghcr.io/${{ github.repository_owner }}/grpc-front-${{ github.event.inputs.tag_suffix }}:${{ github.ref_name }}
      - name: Build and push worker GPU Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          file: worker-main/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/worker-${{ github.event.inputs.tag_suffix }}:latest
            ghcr.io/${{ github.repository_owner }}/worker-${{ github.event.inputs.tag_suffix }}:${{ github.ref_name }}

  build-and-push-all-in-one-gpu-image:
    runs-on: ubuntu-latest
    container:
      image: nvcr.io/nvidia/cuda:12.8.1-devel-ubuntu24.04
      options: --privileged -v /var/run/docker.sock:/var/run/docker.sock
    # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
    permissions:
      contents: read
      packages: write
    steps:
      - name: apt upgrade
        run: |
          apt-get update
          apt-get -y dist-upgrade && apt-get install -y sudo lv zsh git curl build-essential mold clang musl-tools cmake pkg-config libssl-dev protobuf-compiler unzip ca-certificates curl gnupg lsb-release docker.io
          # Install Node.js for setup-protoc action
          curl -fsSL https://deb.nodesource.com/setup_18.x | bash -
          apt-get install -y nodejs
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install last version of Protoc
        uses: arduino/setup-protoc@v2
        with:
          version: "24.x"
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-gpu-aio-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Display GPU features
        run: |
          echo "Building with features: ${{ github.event.inputs.features }}"
          echo "Tag suffix: ${{ github.event.inputs.tag_suffix }}"
          # CUDA環境の確認
          nvidia-smi || echo "nvidia-smi not available (expected in CI)"
          nvcc --version || echo "nvcc not available"
      # build with GPU features
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --features "${{ github.event.inputs.features }}"
      # Uses the `docker/login-action` action to log in to the Container registry registry using the account and password that will publish the packages. Once published, the packages are scoped to the account defined here.
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push jobworkerp GPU Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          file: Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/jobworkerp-${{ github.event.inputs.tag_suffix }}:latest
            ghcr.io/${{ github.repository_owner }}/jobworkerp-${{ github.event.inputs.tag_suffix }}:${{ github.ref_name }}