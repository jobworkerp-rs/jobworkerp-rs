syntax = "proto3";

package jobworkerp.runner;

// Docker runner configuration for container creation and management
message DockerRunnerSettings {
    // # From Image
    // Name of the image to pull. The name may include a tag or digest.
    // This parameter may only be used when pulling an image.
    // The pull is cancelled if the HTTP connection is closed.
    optional string from_image = 1;
    
    // # From Source
    // Source to import. The value may be a URL from which the image can be retrieved
    // or `-` to read the image from the request body.
    // This parameter may only be used when importing an image.
    optional string from_src = 2;
    
    // # Repository
    // Repository name given to an image when it is imported.
    // The repo may include a tag. This parameter may only be used when importing an image.
    optional string repo = 3;
    
    // # Tag
    // Tag or digest. If empty when pulling an image, 
    // this causes all tags for the given image to be pulled.
    optional string tag = 4;
    
    // # Platform
    // Target platform in the format `os[/arch[/variant]]` (e.g., linux/amd64, linux/arm64)
    optional string platform = 5;

    // # Exposed Ports
    // An object mapping ports to an empty object in the form: {"<port>/<tcp|udp|sctp>": {}}
    // repeated string exposed_ports = 6;

    // # Environment Variables
    // A list of environment variables to set inside the container in the form ["VAR=value", ...].
    // A variable without "=" is removed from the environment, rather than having an empty value.
    repeated string env = 7;

    // # Volumes
    // An object mapping mount point paths inside the container to empty objects
    repeated string volumes = 8;

    // # Working Directory
    // The working directory for commands to run in
    optional string working_dir = 9;

    // # Entrypoint
    // The entry point for the container as an array of strings.
    // If the array consists of exactly one empty string ([""]) then the entry point
    // is reset to system default (i.e., the entry point used by docker when 
    // there is no ENTRYPOINT instruction in the Dockerfile).
    repeated string entrypoint = 10;

    // # Network Disabled
    // When set to true, networking will be disabled within the container
    // optional bool network_disabled = 11;

    // # MAC Address
    // MAC address of the container.
    // Deprecated: this field is deprecated in API v1.44 and up. Use EndpointSettings.MacAddress instead.
    // optional string mac_address = 12;
}
