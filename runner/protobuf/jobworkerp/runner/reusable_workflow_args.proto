syntax = "proto3";

package jobworkerp.runner;

message ReusableWorkflowArgs {
  // # Input
  // String input for the workflow context
  // Must conform to the schema defined in the workflow definition
  // (Can be a plain string or JSON formatted string, runtime expression
  // available)
  string input = 1;

  // # Workflow Context
  // Additional context information for workflow execution
  // Can be a plain string or JSON formatted string
  optional string workflow_context = 2;

  // # Execution ID
  // Unique identifier for the workflow execution instance
  // Used to track and manage the execution state if specified
  optional string execution_id = 3;

  message Checkpoint {
    message WorkflowCheckPointContext {
      // Unique name for the workflow
      string name = 1;
      // Input data for the workflow execution (JSON)
      string input = 2;
      // Context variables for the workflow execution (JSON)
      string context_variables = 3;
    }
    message TaskCheckPointContext {
      // Processed input data for the task execution (JSON)
      string input = 1;
      // Processed output data from the task execution (JSON)
      string output = 2;
      // Context variables for the task execution (JSON)
      string context_variables = 3;
      string flow_directive = 4; // Flow directive for the task execution (e.g.
                                 // "continue", "end", "exit", and task name)
    }
    message CheckPointContext {
      // Workflow checkpoint context
      WorkflowCheckPointContext workflow = 1;
      // Task checkpoint context
      TaskCheckPointContext task = 2;
    }

    // # Checkpoint Data
    // If specified, it will override the context data for this checkpoint
    optional CheckPointContext data = 1;

    // # Checkpoint Position
    // The position as json pointer in the workflow where this checkpoint is
    // defined. Must be a valid position string as defined in the workflow
    // definition
    string position = 2;
  }
  // # Checkpoint
  // Optional checkpoint data for the workflow execution.
  // This is used to restart the workflow execution from a specific point
  optional Checkpoint from_checkpoint = 4;
}
